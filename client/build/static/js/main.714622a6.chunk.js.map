{"version":3,"sources":["components/MonsterList.js","components/TreasureList.js","components/MonstersAndTreasure.js","components/EventsAndHazards.js","components/HelloQuest.js","components/AboutProject.js","App.js","index.js"],"names":["MakeTheSpecialsList","props","className","style","whiteSpace","thisMonster","special_rules","arrayIndex","rule_name","rule_description","MakeAMonsterBox","specialsListArr","Array","monsterList","length","keys","width","number","monster_name","wounds","move","weapon_skill","ballistic_skill","strength","toughness","initiative","attacks","gold","armour","damage","level","map","idx","key","href","onClick","oldArray","updateMonsterList","slice","concat","MonsterList","monsterListArr","MakeATreasureBox","treasureList","treasure_name","treasure_type","treasure_cost","treasure_description","updateTreasureList","TreasureList","treasureListArr","monsterArray","d66","treasureArray","newMonsterArray","data","newArray","shift","MonstersAndTreasure","value","monDropdownValue","id","onChange","e","updateMonDropdownValue","currentTarget","monDropdownItems","label","role","document","getElementById","alert","monsterLevel","fetch","then","response","json","tresDropdownValue","updateTresDropdownValue","tresDropdownItems","roomtype","newTreasureArray","eventArray","event_n_haz_id","event_n_haz_type","event_n_haz_name","event_n_haz_roll","event_n_haz_has_sub","event_n_haz_description","event_n_haz_subs_visible","event_n_haz_subs_descriptions","newEventArray","EventList","eventListArr","eventList","MakeAnEventBox","updateEventList","eventListToReturn","JSON","parse","stringify","EventsAndHazards","eventDropdownValue","updateEventDropdownValue","eventDropdownItems","eventType","returnedEvent","moddedReturnedEvent","subsReturned","concatdSubs","eventToMod","sort","a","b","event_n_haz_subs_order","i","event_n_haz_subs_roll","event_n_haz_subs_description","addTheSubsToEvent","HelloQuest","src","alt","height","AboutProject","monsterDropdownArray","treasureDropdownArray","eventDropdownArray","tabsArray","TabCreator","updateTab","activeTab","fontSize","ContentPicker","updateMonDropdownItems","updateTresDropdownItems","updateEventDropdownItems","App","useState","ReactDOM","render"],"mappings":"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","file":"static/js/main.714622a6.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nfunction MakeTheSpecialsList (props) {\r\n    return (\r\n        <li className=\"list-group-item p-1 ml-3\" style={{whiteSpace: 'pre-wrap'}}>\r\n            <span className=\"font-weight-bold\">{props.thisMonster.special_rules[props.arrayIndex].rule_name}</span> {props.thisMonster.special_rules[props.arrayIndex].rule_description}\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction removeArrayItem (oldArray, arrayIndex) {\r\n    const filteredArray = oldArray.slice(0, arrayIndex).concat(oldArray.slice(arrayIndex + 1, oldArray.length))\r\n    return filteredArray;\r\n}\r\n\r\nfunction MakeAMonsterBox (props) {\r\n    const specialsListArr = [...Array(props.monsterList[props.arrayIndex].special_rules.length).keys()]\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card mb-2 border border-dark\" style={{width: \"1130px\"}}>\r\n                <div className=\"card-body d-flex flex-row p-3\">\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"50px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom\">#</div>\r\n                        <div className=\"p-0 font-weight-bold\">{props.monsterList[props.arrayIndex].number}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"180px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom\">Monster Name</div>\r\n                        <div className=\"p-0 font-weight-bold\">{props.monsterList[props.arrayIndex].monster_name}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"70px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Wnds</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].wounds}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"70px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Move</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].move}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"60px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">WS</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].weapon_skill}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"60px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">BS</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].ballistic_skill}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"90px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Strength</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].strength}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"70px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Tough.</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].toughness}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"70px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Init.</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].initiative}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"70px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Attacks</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].attacks}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"70px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Gold</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].gold}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"70px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Armour</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].armour}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"110px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Dmg</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].damage}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"50px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Level</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.monsterList[props.arrayIndex].level}</div>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {specialsListArr.map((idx) => <MakeTheSpecialsList key={idx} arrayIndex={idx} thisMonster={props.monsterList[props.arrayIndex]} />)}\r\n                </ul>\r\n                <div className=\"card-body p-1 ml-3 text-center\">\r\n                    <a href=\"# \" className=\"card-link btn btn-primary btn-sm\"\r\n                        onClick={function() { props.updateMonsterList( removeArrayItem(props.monsterList, props.arrayIndex) ) }}\r\n                    >Remove Monster</a>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nfunction MonsterList (props) {\r\n    const monsterListArr = [...Array(props.monsterList.length).keys()]\r\n    return (\r\n        <Fragment>\r\n            <div className = \"\">\r\n                {monsterListArr.map((idx) => <MakeAMonsterBox key={idx} arrayIndex={idx} monsterList={props.monsterList} updateMonsterList={props.updateMonsterList}/>)}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default MonsterList; ","import React, { Fragment } from \"react\";\r\n\r\n\r\nfunction removeArrayItem (oldArray, arrayIndex) {\r\n    const filteredArray = oldArray.slice(0, arrayIndex).concat(oldArray.slice(arrayIndex + 1, oldArray.length))\r\n    return filteredArray;\r\n}\r\n\r\nfunction MakeATreasureBox (props) {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"card mb-2 border border-dark\" style={{width: \"600px\"}}>\r\n                    <div className=\"card-body d-flex flex-row px-3 py-2\">\r\n                        <div className=\"p-0 d-flex flex-column\" style={{width: \"250px\"}}>\r\n                            <div className=\"p-0 border-top border-bottom\">Name</div>\r\n                            <div className=\"p-0 font-weight-bold\">{props.treasureList[props.arrayIndex].treasure_name}</div>\r\n                        </div>\r\n                        <div className=\"p-0 d-flex flex-column\" style={{width: \"230px\"}}>\r\n                            <div className=\"p-0 border-top border-bottom\">Treasure Type</div>\r\n                            <div className=\"p-0 font-weight-normal\">{props.treasureList[props.arrayIndex].treasure_type}</div>\r\n                        </div>\r\n                        <div className=\"p-0 d-flex flex-column\" style={{width: \"100px\"}}>\r\n                            <div className=\"p-0 border-top border-bottom mx-auto\">Cost</div>\r\n                            <div className=\"p-0 mx-auto font-weight-normal\">{props.treasureList[props.arrayIndex].treasure_cost}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body p-0 px-3\">\r\n                        {props.treasureList[props.arrayIndex].treasure_description}\r\n                    </div>\r\n                    <div className=\"card-body p-1 ml-3 text-center\">\r\n                        <a href=\"# \" className=\"card-link btn btn-primary btn-sm\"\r\n                            onClick={function() { props.updateTreasureList( removeArrayItem(props.treasureList, props.arrayIndex) ) }}\r\n                        >Remove Treasure</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nfunction TreasureList (props) {\r\n    const treasureListArr = [...Array(props.treasureList.length).keys()]\r\n    return (\r\n        <Fragment>\r\n            <div className = \"d-flex flex-column\">\r\n                {treasureListArr.map((idx) => <MakeATreasureBox key={idx} arrayIndex={idx} treasureList={props.treasureList} updateTreasureList={props.updateTreasureList}/>)}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default TreasureList; ","import React, { Fragment } from 'react';\nimport MonsterList from './MonsterList.js';\nimport TreasureList from './TreasureList.js';\n\nconst monsterArray = [{ d66: \"\", level: \"\", number: \"\", monster_name: \"\", wounds: \"\", move: \"\", weapon_skill: \"\", ballistic_skill: \"\", strength: \"\", toughness: \"\", initiative: \"\", attacks: \"\", gold: \"\", armour: \"\", damage: \"\", special_rules: [] }];\n\nconst treasureArray = [{ treasure_type: \"\", treasure_name: \"\", treasure_cost: \"\", treasure_description: \"\" }];\n\nfunction newMonsterArray (oldArray, data) {\n  let newArray = oldArray.concat(data);\n  if (newArray[0].d66 === \"\") {\n    newArray.shift();\n  }\n  return newArray;\n}\n\nfunction newTreasureArray (oldArray, data) {\n  let newArray = oldArray.concat(data);\n  if (newArray[0].treasure_type === \"\") {\n    newArray.shift();\n  }\n  return newArray;\n}\n\nfunction MonstersAndTreasure (props) {\n  return (\n    <Fragment>\n      <div className='container-fluid'>\n        <div className='row'>\n          <div className='container col justify-content-center border-right'>\n            <div className='container text-center mt-3 d-flex justify-content-center'>\n              <select className=\"custom-select\" \n                      style={{width: \"300px\"}} \n                      value={props.monDropdownValue} \n                      id='monsterLevel'\n                      onChange={e => props.updateMonDropdownValue(e.currentTarget.value)}\n              >\n                {props.monDropdownItems.map(({ label, value }) => (\n                  <option key={value} value={value}>\n                    {label}\n                  </option>\n                ))}\n              </select>\n              <a className=\"btn btn-primary mx-2\" href=\"# \" role=\"button\"\n                onClick={function clickGetMonsterButton(){\n                    if (document.getElementById('monsterLevel').value === 'DEFAULT') {\n                      alert(\"Please choose a Monster Level!\");\n                    } else {\n                      let monsterLevel = document.getElementById('monsterLevel').value;\n                      //fetch(`http://localhost:7878/api/getmonster/${monsterLevel}`)\n                      fetch(`/api/getmonster/${monsterLevel}`)\n                      .then(function(response) {return response.json()})\n                      .then(function(data) { \n                        props.updateMonsterList( newMonsterArray(props.monsterList, data))})\n                    }\n                }}>Dungeon Room Monsters</a>\n              <a className=\"btn btn-warning\" href=\"# \" role=\"button\"\n                onClick={function clickGetObjMonstersButton(){\n                    if (document.getElementById('monsterLevel').value === 'DEFAULT') {\n                      alert(\"Please choose a Monster Level!\");\n                    } else {\n                      let monsterLevel = document.getElementById('monsterLevel').value;\n                      // fetch(`http://localhost:7878/api/getobjectiveroom/${monsterLevel}`)\n                      fetch(`/api/getobjectiveroom/${monsterLevel}`)\n                      .then(function(response) {return response.json()})\n                      .then(function(data) { \n                        props.updateMonsterList( newMonsterArray(props.monsterList, data))})\n                    }\n                }}>Objective Room Monsters</a>\n              <a className=\"btn btn-danger mx-2\" href=\"# \" role=\"button\"\n                onClick={function clickClearMonsterButton(){ props.updateMonsterList( monsterArray );\n                }}>Clear all Monsters</a>\n            </div>\n            <div className='container justify-content-center'>\n              <h1 className='text-center mt-3 ml-3'>Monster List</h1>\n              <MonsterList monsterList={props.monsterList} updateMonsterList={props.updateMonsterList} />\n            </div>\n          </div>\n          <div className='container col-5 justify-content-center'>\n            <div className='container text-center mt-3 d-flex justify-content-center'>\n              <select className=\"custom-select\" \n                      style={{width: \"300px\"}} \n                      value={props.tresDropdownValue} \n                      id='treasureType'\n                      onChange={e => props.updateTresDropdownValue(e.currentTarget.value)}\n              >\n                {props.tresDropdownItems.map(({ label, value }) => (\n                  <option key={value} value={value}>\n                    {label}\n                  </option>\n                ))}\n              </select>\n              <a className=\"btn btn-primary px-2 mx-2\" href=\"# \" role=\"button\"\n                onClick={function clickGetTreasureButton(){\n                    if (document.getElementById('treasureType').value === 'DEFAULT') {\n                      alert(\"Please choose a Treasure Type!\");\n                    } else {\n                      let roomtype = document.getElementById('treasureType').value;\n                      //fetch(`http://localhost:7878/api/gettreasure/${roomtype}`)\n                      fetch(`/api/gettreasure/${roomtype}`)\n                      .then(function(response) {return response.json()})\n                      .then(function(data) { \n                        props.updateTreasureList( newTreasureArray(props.treasureList, data))})\n                    }\n                }}\n              >Generate a Treasure</a>\n              <a className=\"btn btn-danger px-2\" href=\"# \" role=\"button\"\n                onClick={function clickClearTreasuresButton(){ props.updateTreasureList( treasureArray );\n                }}>Clear all Treasures</a>\n            </div>\n            <div className='container justify-content-center'>\n              <h1 className='text-center mt-3'>Treasure List</h1>\n              <TreasureList treasureList={props.treasureList} updateTreasureList={props.updateTreasureList} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default MonstersAndTreasure; \n","import React, { Fragment } from 'react';\r\n\r\nconst eventArray = [{ event_n_haz_id: \"\", event_n_haz_type: \"\", event_n_haz_name: \"\", event_n_haz_roll: \"\", event_n_haz_has_sub: \"\", event_n_haz_description: \"\", event_n_haz_subs_visible: \"\", event_n_haz_subs_descriptions: \"\" }];\r\n\r\nfunction newEventArray (oldArray, data) {\r\n  let newArray = oldArray.concat(data);\r\n  if (newArray[0].event_n_haz_id === \"\") {\r\n    newArray.shift();\r\n  }\r\n  return newArray;\r\n}\r\n\r\nfunction removeArrayItem (oldArray, arrayIndex) {\r\n    const filteredArray = oldArray.slice(0, arrayIndex).concat(oldArray.slice(arrayIndex + 1, oldArray.length))\r\n    return filteredArray;\r\n}\r\n\r\nfunction addTheSubsToEvent (returnedEvent, subsReturned) {\r\n    let concatdSubs = \"\";\r\n    let eventToMod = returnedEvent;\r\n    subsReturned.sort((a, b) => (a.event_n_haz_subs_order > b.event_n_haz_subs_order) ? 1 : -1);\r\n    for (let i = 0; i < subsReturned.length; i++) {\r\n        if (subsReturned[i].event_n_haz_subs_order === 1) {\r\n            concatdSubs = subsReturned[i].event_n_haz_subs_roll + \" --- \" + subsReturned[i].event_n_haz_subs_description;\r\n        } else {\r\n            concatdSubs = concatdSubs + \"\\n\" + subsReturned[i].event_n_haz_subs_roll + \" --- \" + subsReturned[i].event_n_haz_subs_description;\r\n        }\r\n    };\r\n    eventToMod.event_n_haz_description = eventToMod.event_n_haz_description + \"\\n(With some Events/Hazards, it's best for the players NOT to see the accompanying sub-table before rolling. --Click below to toggle visibility--)\";\r\n    eventToMod.event_n_haz_subs_visible = false;\r\n    eventToMod.event_n_haz_subs_descriptions = concatdSubs;\r\n    return eventToMod;\r\n};\r\n\r\nfunction EventList (props) {\r\n    const eventListArr = [...Array(props.eventList.length).keys()]\r\n    return (\r\n        <Fragment>\r\n            <div className = \"\">\r\n                {eventListArr.map((idx) => <MakeAnEventBox key={idx} arrayIndex={idx} eventList={props.eventList} updateEventList={props.updateEventList}/>)}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nfunction MakeAnEventBox (props) {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card mb-2 border border-dark\" style={{width: \"1130px\"}}>\r\n                <div className=\"card-body d-flex flex-row justify-content-center p-3\">\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"200px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom\">Type</div>\r\n                        <div className=\"p-0 font-weight-bold\">{props.eventList[props.arrayIndex].event_n_haz_type}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"300px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom\">Event Name</div>\r\n                        <div className=\"p-0 font-weight-bold\">{props.eventList[props.arrayIndex].event_n_haz_name}</div>\r\n                    </div>\r\n                    <div className=\"p-0 d-flex flex-column\" style={{width: \"100px\"}}>\r\n                        <div className=\"p-0 border-top border-bottom mx-auto\">Roll</div>\r\n                        <div className=\"p-0 mx-auto font-weight-bold\">{props.eventList[props.arrayIndex].event_n_haz_roll}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body p-1 ml-3\" style={{whiteSpace: 'pre-wrap'}}>\r\n                    {props.eventList[props.arrayIndex].event_n_haz_description}\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\"\r\n                    onClick={function clickGetEventButton() {\r\n                        let eventListToReturn = JSON.parse(JSON.stringify(props.eventList));\r\n                        if (eventListToReturn[props.arrayIndex].event_n_haz_subs_visible === false) {\r\n                            eventListToReturn[props.arrayIndex].event_n_haz_subs_visible = true;\r\n                        } else {\r\n                            eventListToReturn[props.arrayIndex].event_n_haz_subs_visible = false;\r\n                        }\r\n                        props.updateEventList(eventListToReturn)\r\n                    }}\r\n                >\r\n                    <li className={`${props.eventList[props.arrayIndex].event_n_haz_subs_visible === false ? 'list-group-item p-1 ml-3 invisible' : 'list-group-item p-1 ml-3 visible'}`} style={{whiteSpace: 'pre-wrap'}}>\r\n                        {props.eventList[props.arrayIndex].event_n_haz_subs_descriptions}\r\n                    </li>\r\n                </ul>\r\n                <div className=\"card-body p-1 ml-3 text-center\">\r\n                    <a href=\"# \" className=\"card-link btn btn-primary btn-sm\"\r\n                        onClick={function() { props.updateEventList( removeArrayItem(props.eventList, props.arrayIndex) ) }}\r\n                    >Remove Event/Hazard</a>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nfunction EventsAndHazards(props) {\r\n  return (\r\n    <Fragment>\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='container col justify-content-center border-right'>\r\n            <div className='container text-center mt-3 d-flex justify-content-center'>\r\n              <select className=\"custom-select\" \r\n                      style={{width: \"300px\"}} \r\n                      value={props.eventDropdownValue} \r\n                      id='eventType'\r\n                      onChange={e => props.updateEventDropdownValue(e.currentTarget.value)}\r\n              >\r\n                {props.eventDropdownItems.map(({ label, value }) => (\r\n                  <option key={value} value={value}>\r\n                    {label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <a className=\"btn btn-primary px-2 mx-2\" href=\"# \" role=\"button\"\r\n                onClick={function clickGetEventButton() {\r\n                    if (document.getElementById('eventType').value === 'DEFAULT') {\r\n                      alert(\"Please choose an Event Type!\");\r\n                    } else {\r\n                      let eventType = document.getElementById('eventType').value;\r\n                      // fetch(`http://localhost:7878/api/getevent/${eventType}`)\r\n                      fetch(`/api/getevent/${eventType}`)\r\n                      .then(function(response) {return response.json()})\r\n                      .then(function(data) { \r\n                        let returnedEvent = data;\r\n                        let moddedReturnedEvent = {};\r\n                        if (returnedEvent.event_n_haz_has_sub) {\r\n                            // fetch(`http://localhost:7878/api/getsubs/${eventType}.${returnedEvent.event_n_haz_id}`)\r\n                            fetch(`/api/getsubs/${eventType}.${returnedEvent.event_n_haz_id}`)\r\n                            .then(function(response) {return response.json()})\r\n                            .then(function(data) {\r\n                                let subsReturned = data;\r\n                                moddedReturnedEvent = addTheSubsToEvent(returnedEvent, subsReturned);\r\n                                props.updateEventList( newEventArray(props.eventList, moddedReturnedEvent));\r\n                            })\r\n                        } else {\r\n                            returnedEvent.event_n_haz_subs_descriptions = \"\";\r\n                            moddedReturnedEvent = returnedEvent;\r\n                            props.updateEventList( newEventArray(props.eventList, moddedReturnedEvent));\r\n                        }\r\n                        })\r\n                    };\r\n                }}\r\n                >Generate an Event/Hazard</a>\r\n              <a className=\"btn btn-danger px-2\" href=\"# \" role=\"button\"\r\n                onClick={function clickClearEventButton(){ props.updateEventList( eventArray );\r\n                }}>Clear all Events/Hazards</a>\r\n            </div>\r\n            <div className='container justify-content-center'>\r\n              <h1 className='text-center mt-3 ml-3'>Events/Hazards List</h1>\r\n              <EventList eventList={props.eventList} updateEventList={props.updateEventList} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default EventsAndHazards;","import React, { Fragment } from 'react';\r\n\r\nfunction HelloQuest() {\r\n  return (\r\n    <Fragment>\r\n      <div className='container-fluid justify-content-center text-left mt-3'>\r\n        <h1 className= 'm-3 text-center'>Welcome to My Warhammer Quest Project!</h1>\r\n        <div className=\"d-flex flex-column container col-6\">\r\n            <div className=\"row media mb-2\">\r\n                <div className=\"media-body\">\r\n                    <p className='h5'>The purpose of this site is to be a random generator for the Monsters, Treasures and Events in a game of <a className='font-weight-bold' href='https://en.wikipedia.org/wiki/Warhammer_Quest'>Warhammer Quest</a>.</p> \r\n                    <p className='h5'>Instead of using the charts and tables from the Warhammer Quest Roleplay Book, this app allows you to generate what you need at the click of a button.</p>\r\n                    <p className='h5'>In the tabs above you will find:</p>\r\n                    <div className='container justify-content-center'>\r\n                        <ul className='text-left'>\r\n                            <li className='h5'>\r\n                                On the Monsters and Treasures Tab you can:\r\n                                <ul>\r\n                                    <li className='h5 mt-1'>Generate Dungeon Room and Objective Room Monster Groups by Level</li>\r\n                                    <li className='h5'>Generate Dungeon Room and Objective Room Treasures</li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className='h5'>\r\n                                On the Events and Hazards Tab you can:\r\n                                <ul>\r\n                                    <li className='h5 mt-1'>Generate Dungeon Events while within the dungeon</li>\r\n                                    <li className='h5'>Generate Travel Hazards during their weeks of travel to a Settlement</li>\r\n                                    <li className='h5'>Generate Settlement Events for each day they are staying in a village/town/city</li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className='h5'>On the About Tab you can read why I created this project </li>\r\n                        </ul>\r\n                    </div>\r\n                    <p className='h5'>Thank you for visiting, and if you have an old copy of Warhammer Quest, I hope you find this site useful.</p>\r\n                </div>\r\n                <img className=\"ml-3 myimage\" src=\"questbox2.jpg\" alt=\"Quest Box\" style={ {width: '300px', height: '211px' }} />\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default HelloQuest;","import React, { Fragment } from 'react';\r\n\r\nfunction AboutProject() {\r\n  return (\r\n    <Fragment>\r\n      <div className='container-fluid justify-content-center text-center mt-4'>\r\n        <div className=\"d-flex flex-column container col-6\">\r\n            <div className=\"row media mb-2\">\r\n                <div className=\"media-body text-left\">\r\n                    <h3 className=\"my-2 text-center\">About My Warhammer Quest Project</h3>\r\n                    <p className='h5'>So, I'm a huge tabletop gaming nerd.</p> \r\n                    <p className='h5'>Board games, role-playing games (like Dungeons and Dragons), card games, miniatures games...if you can gather around a table and play it, I probably have.</p>\r\n                    <p className='h5'>Many years ago my friends and I played this tabletop miniatures game called <a className='font-weight-bold' href='https://en.wikipedia.org/wiki/Warhammer_Quest'>Warhammer Quest</a>.</p>\r\n                </div>\r\n                <img className=\"ml-3 myimage\" src=\"questbox2.jpg\" alt=\"Quest Box\" style={ {width: '300px', height: '211px' }} />\r\n            </div>\r\n            <div className=\"row media mb-2\">\r\n                <img className=\"ml-3 myimage\" src=\"minis.jpg\" alt=\"Quest Miniatures\" style={ {width: '300px', height: '212px' }} />\r\n                <div className=\"media-body text-left\">\r\n                    <p className='h5 mt-3 ml-3'>It is a fantasy adventure board game simulating a Dungeons-and-Dragons style dungeon crawl, but without a dungeon master controlling the monsters.</p>\r\n                    <p className='h5 ml-3'>The game presented a set of rules for how the monsters behaved and attacked the players. </p>\r\n                    <p className='h5 ml-3'>With many different mechanics to generate and control the monsters, all you needed were some other players to sit down with you and play.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row media mb-2\">\r\n                <div className=\"media-body text-left\">\r\n                    <p className='h5 mt-3'>The one mechanic that I found to be the most tedious was the random monster tables layed out in the rule book for all the higher level monsters. (monsters past level 1)</p>\r\n                    <p className='h5'>Each new encounter became this tiresome process of rolling on a table for the monsters... </p>\r\n                    <p className='h5'>Then looking elsewhere in the book for all the special rules that monster had...</p>\r\n                    <p className='h5'>Then rolling on another chart to see what treasures those monsters were carrying... </p>\r\n                    <img className=\"myimage mx-auto d-block\" src=\"rage2.jpg\" alt=\"Rage\" style={ {width: '133px', height: '75px' }} />\r\n                </div>\r\n                <img className=\"ml-3 myimage\" src=\"monsterchart3.jpg\" alt=\"Monster Chart\" style={ {width: '300px', height: '227px' }} />\r\n            </div>\r\n            <div className=\"row media mb-2 mt-2\">\r\n                <img className=\"ml-3 myimage\" src=\"helper2.jpg\" alt=\"My Excel Helper\" style={ {width: '350px', height: '200px' }} />\r\n                <div className=\"media-body text-left\">\r\n                    <p className='h5 mt-3 ml-3'>I fealt there had to be a way to speed up this process.</p>\r\n                    <p className='h5 ml-3'>At the time I was good with Excel and I was learning VBA to automate some processes for my job, so I decided to build a monster generator in an Excel spreadsheet. </p>\r\n                    <p className='h5 ml-3'>I brought in all the monster tables and rules into the excel file as different Excel sheets, essentially my 'database'.</p>\r\n                    <p className='h5 ml-3'>I used Visual Basic to create the logic of generating the monsters and treasures.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row media mb-2\">\r\n                <div className=\"media-body text-left\">\r\n                    <p className='h5 mt-3'>It was clunky, but it worked.</p>\r\n                    <p className='h5'>My friends and I used my little Excel pet project many times over the years, with Warhammer Quest spread out on a kitchen table, and a laptop running my little app sitting next to it. </p>\r\n                    <p className='h5'>Fast forward about fifteen years, and I now find myself with the skills to take my little pet project and turn it into a proper full-stack web application.</p>\r\n                    <p className='h5 mt-3'>So here we are...</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AboutProject;","import React, { useState, Fragment } from 'react';\nimport './App.css';\nimport MonstersAndTreasure from './components/MonstersAndTreasure';\nimport EventsAndHazards from './components/EventsAndHazards';\nimport HelloQuest from './components/HelloQuest';\nimport AboutProject from './components/AboutProject';\n\n\nconst monsterArray = [{ d66: \"\", level: \"\", number: \"\", monster_name: \"\", wounds: \"\", move: \"\", weapon_skill: \"\", ballistic_skill: \"\", strength: \"\", toughness: \"\", initiative: \"\", attacks: \"\", gold: \"\", armour: \"\", damage: \"\", special_rules: [] }];\n\nconst treasureArray = [{ treasure_type: \"\", treasure_name: \"\", treasure_cost: \"\", treasure_description: \"\" }];\n\nconst eventArray = [{ event_n_haz_id: \"\", event_n_haz_type: \"\", event_n_haz_name: \"\", event_n_haz_roll: \"\", event_n_haz_has_sub: \"\", event_n_haz_description: \"\" }];\n\nconst monsterDropdownArray = [{ label: \"Choose a Level for Monsters...\", value: \"DEFAULT\"}, { label: \"One\", value: \"1\"}, { label: \"Two\", value: \"2\"}, { label: \"Three\", value: \"3\"}, { label: \"Four\", value: \"4\"}, { label: \"Five\", value: \"5\"}, { label: \"Six\", value: \"6\"}, { label: \"Seven\", value: \"7\"}, { label: \"Eight\", value: \"8\"}, { label: \"Nine\", value: \"9\"}, { label: \"Ten\", value: \"10\"}];\n\nconst treasureDropdownArray = [{ label: \"Choose a Type of Treasure...\", value: \"DEFAULT\"}, { label: \"Dungeon Room Treasure\", value: \"DRT\"}, { label: \"Objective Room Treasure\", value: \"ORT\"}];\n\nconst eventDropdownArray = [{ label: \"Choose a Type of Event/Hazard...\", value: \"DEFAULT\"}, { label: \"Dungeon Event\", value: \"dungeon event\"}, { label: \"Settlement Event\", value: \"settlement event\"}, { label: \"Travel Hazard\", value: \"travel hazard\"}];\n\nconst tabsArray = [\n  { label: \"My Warhammer Quest Project\", value: \"TAB_HELLO\", key: \"1\" },\n  { label: \"Monsters and Treasure\", value: \"TAB_MONSTERS\", key: \"2\" },\n  { label: \"Events and Hazards\", value: \"TAB_EVENTS\", key: \"3\" },\n  { label: \"About the Project\", value: \"TAB_ABOUT\", key: \"4\" }\n];\n\nfunction TabCreator (props) {\n  return (\n    <ul className='nav nav-tabs nav-justified'>\n      {props.tabsArray.map(({ label, value, key }) => (\n        <li\n          className='nav-item' key={key}\n          onClick={() => { props.updateTab(value); }}\n        >\n          <a href=\"# \" className={`${value === props.activeTab ? 'font-weight-bold nav-link active' : 'nav-link'}`} style={{fontSize: \"x-large\"}}>{label}</a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction ContentPicker (props) {\n  if (props.activeTab === \"TAB_HELLO\") {\n    return (<HelloQuest />);\n  } else if (props.activeTab === \"TAB_MONSTERS\") {\n    return (<MonstersAndTreasure\n              monsterList={props.monsterList}\n              updateMonsterList={props.updateMonsterList}\n              treasureList={props.treasureList}\n              updateTreasureList={props.updateTreasureList}\n              monDropdownItems={props.monDropdownItems}\n              updateMonDropdownItems={props.updateMonDropdownItems}\n              monDropdownValue={props.monDropdownValue}\n              updateMonDropdownValue={props.updateMonDropdownValue}\n              tresDropdownItems={props.tresDropdownItems}\n              updateTresDropdownItems={props.updateTresDropdownItems}\n              tresDropdownValue={props.tresDropdownValue}\n              updateTresDropdownValue={props.updateTresDropdownValue}\n            />);\n  } else if (props.activeTab === \"TAB_EVENTS\") {\n    return (<EventsAndHazards \n              eventList={props.eventList}\n              updateEventList={props.updateEventList}\n              eventDropdownItems={props.eventDropdownItems}\n              updateEventDropdownItems={props.updateEventDropdownItems}\n              eventDropdownValue={props.eventDropdownValue}\n              updateEventDropdownValue={props.updateEventDropdownValue} \n            />);\n  } else {\n    return (<AboutProject />);\n  }\n}\n\nfunction App() {\n  const [activeTab, updateTab] = useState(\"TAB_HELLO\");                 //tracking the tabs state\n  const [monsterList, updateMonsterList] = useState(monsterArray);\n  const [treasureList, updateTreasureList] = useState(treasureArray);\n  const [eventList, updateEventList] = useState(eventArray);\n  const [monDropdownItems, updateMonDropdownItems] = useState(monsterDropdownArray);\n  const [monDropdownValue, updateMonDropdownValue] = useState(\"DEFAULT\");\n  const [tresDropdownItems, updateTresDropdownItems] = useState(treasureDropdownArray);\n  const [tresDropdownValue, updateTresDropdownValue] = useState(\"DEFAULT\");\n  const [eventDropdownItems, updateEventDropdownItems] = useState(eventDropdownArray);\n  const [eventDropdownValue, updateEventDropdownValue] = useState(\"DEFAULT\");\n  return (\n    <Fragment>\n      <section className=\"section\">\n        <div className=\"container-fluid\">\n          <div className=\"\">\n            <TabCreator tabsArray={tabsArray} activeTab={activeTab} updateTab={updateTab} />\n          </div>\n          <section className=\"container-fluid\">\n            <ContentPicker                                        //passing all the states and the updaters to ContentPicker\n              activeTab={activeTab}                               //pass the active tab\n              monsterList={monsterList}                           //passing the monster list state\n              updateMonsterList={updateMonsterList}               //the updater for it\n              treasureList={treasureList}                         //passing the treasure list state\n              updateTreasureList={updateTreasureList}             //the updater\n              eventList={eventList}                               //passing the event list state\n              updateEventList={updateEventList}                   //updater\n              monDropdownItems={monDropdownItems}                 //passing the list of dropdown items for monsters\n              updateMonDropdownItems={updateMonDropdownItems}     //updater\n              monDropdownValue={monDropdownValue}                 //passing a state for the CURRENT dropdown value in monsters\n              updateMonDropdownValue={updateMonDropdownValue}     //updater\n              tresDropdownItems={tresDropdownItems}               //passing the list of dropdown items for treasures\n              updateTresDropdownItems={updateTresDropdownItems}   //updater\n              tresDropdownValue={tresDropdownValue}               //passing a state for the CURRENT dropdown value in treasures\n              updateTresDropdownValue={updateTresDropdownValue}   //updater\n              eventDropdownItems={eventDropdownItems}             //passing the list of dropdown items for events\n              updateEventDropdownItems={updateEventDropdownItems} //updater\n              eventDropdownValue={eventDropdownValue}             //passing a state for the CURRENT dropdown value in events\n              updateEventDropdownValue={updateEventDropdownValue} //updater\n            />\n          </section>\n        </div>\n      </section>\n    </Fragment>\n  );\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n); \n\n"],"sourceRoot":""}